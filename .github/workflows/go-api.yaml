name: Go

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - "go-api/**"

  push:
    branches: [ "main" ]
    paths:
      - "go-api/**"
    
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: go-api

    strategy:
      matrix:
        go-version: ["1.24"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: go-api

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate tag for Docker Image
      id: generate_tag 
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_TO_ASSUME_ECR }}

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker Image
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: |
        docker build -t $REGISTRY/say-hello-cloud-api:$TAG .
        docker tag $REGISTRY/say-hello-cloud-api:$TAG $REGISTRY/say-hello-cloud-api:latest
        docker push --all-tags $REGISTRY/say-hello-cloud-api
        IMAGE=$(echo $REGISTRY/say-hello-cloud-api:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    - name: Deploy to AWS App Runner
      id: deploy-app-runner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        access-role-arn: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ROLE_TO_ASSUME_APP }}
        region: ${{ secrets.AWS_REGION }}
        service: ${{ vars.SERVICE_NAME }}
        image: ${{ steps.build-docker-image.outputs.image }}
        cpu: 0.25
        memory: 0.5
        port: 8080
        wait-for-service-stability-seconds: 180

    - name: App Runner check
      run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service-url }}"
